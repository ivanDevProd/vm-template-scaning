Processing payload with ID: 014de00a-d9a2-45fe-a2ef-557920c0a5cc
Task created successfully!
Task Key: DPROREQ-1026
Comment added successfully!
Comment added successfully!
Comment added successfully!
Comment added successfully!
Comment added successfully!
Filename: /home/noc_admin/image_scanner_project/scanIt/scripts/uploadeImageToCluster_v2.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   123     39.8 MiB     39.8 MiB           1   @profile
   124                                         def download_and_extract_image(source_url, download_dir, extracted_dir, process_id, jira_task_key=None):
   125     39.8 MiB      0.0 MiB           1       file_size_bytes = 0
   126     39.8 MiB      0.0 MiB           1       try:
   127                                                 # Retrieve file size using HEAD request
   128     39.8 MiB      0.0 MiB           1           response = requests.head(source_url)
   129     39.8 MiB      0.0 MiB           1           file_size_bytes = int(response.headers.get('Content-Length', 0))
   130     39.8 MiB      0.0 MiB           1           if file_size_bytes == 0:
   131                                                     logging.warning(f"Could not retrieve file size from headers: {source_url}")
   132     39.8 MiB      0.0 MiB           1           file_size_gb = file_size_bytes / (1024 ** 3)  # Convert bytes to gigabytes
   133     39.8 MiB      0.0 MiB           1           logging.info(f"File size: {file_size_gb:.2f} GB")
   134     39.8 MiB      0.0 MiB           1           log_to_database(process_id, f"Download started: {source_url}. File size: {file_size_gb:.2f} GB", "INITIATED", source_url, "Download and Extraction")
   135                                         
   136     39.8 MiB      0.0 MiB           1           if jira_task_key:
   137     39.8 MiB      0.0 MiB           1               add_comment_to_jira_task(jira_task_key, f"Starting download of {source_url}. File size: {file_size_gb:.2f} GB")
   138                                                     
   139                                             except Exception as e:
   140                                                 logging.error(f"Error retrieving file size: {e}")
   141                                                 log_to_database(process_id, f"Error retrieving file size: {e}", "FAILED", source_url, "Download and Extraction")
   142                                                 return None
   143                                         
   144     39.8 MiB      0.0 MiB           1       file_name = os.path.basename(source_url)
   145     39.8 MiB      0.0 MiB           1       download_path = os.path.join(download_dir, file_name)
   146                                         
   147     39.8 MiB      0.0 MiB           1       try:
   148                                                 # Download the file using requests to stream large files
   149     39.8 MiB      0.0 MiB           1           logging.info(f"Downloading file to {download_path}")
   150     39.8 MiB      0.0 MiB           2           with requests.get(source_url, stream=True) as response:
   151     39.8 MiB      0.0 MiB           1               response.raise_for_status()
   152     39.8 MiB      0.0 MiB           2               with open(download_path, 'wb') as f:
   153     39.8 MiB      0.0 MiB      148513                   for chunk in response.iter_content(chunk_size=8192):  # Download in 8KB chunks
   154     39.8 MiB      0.0 MiB      148512                       f.write(chunk)
   155     39.8 MiB      0.0 MiB           1           logging.info(f"Downloaded file to {download_path}")
   156     39.8 MiB      0.0 MiB           1           log_to_database(process_id, f"File downloaded: {download_path}", "SUCCEEDED", source_url, "Download and Extraction")
   157                                                 
   158     39.8 MiB      0.0 MiB           1           if jira_task_key:
   159     39.8 MiB      0.0 MiB           1               add_comment_to_jira_task(jira_task_key, f"The archived file has been downloaded to the server.")
   160                                         
   161                                             except Exception as e:
   162                                                 logging.error(f"Error during download: {e}")
   163                                                 log_to_database(process_id, f"Error during download: {e}", "FAILED", source_url, "Download and Extraction")
   164                                         
   165                                                 if jira_task_key:
   166                                                     add_comment_to_jira_task(jira_task_key, f"Error during download: {e}")
   167                                         
   168                                                 return None
   169                                         
   170     39.8 MiB      0.0 MiB           1       try:
   171                                                 # Analyze and extract the tar file
   172     39.8 MiB      0.0 MiB           1           logging.info(f"Attempting to analyze tar file: {download_path}")
   173     40.2 MiB      0.2 MiB           2           with tarfile.open(download_path, "r:*") as tar:  # "r:*" handles both gzip and uncompressed tar
   174     40.0 MiB      0.0 MiB           3               file_info = [member for member in tar.getmembers() if member.isfile()]
   175                                                     
   176                                                     # Calculate file details
   177     40.0 MiB      0.0 MiB           1               num_files = len(file_info)
   178     40.0 MiB      0.0 MiB           5               total_size = sum(file.size for file in file_info)
   179                                                     
   180                                                     # Log file details
   181     40.0 MiB      0.0 MiB           1               logging.info(f"Number of files in archive: {num_files}")
   182     40.0 MiB      0.0 MiB           1               logging.info(f"Total size of files: {total_size / (1024 ** 2):.2f} MB")
   183     40.0 MiB      0.0 MiB           1               log_to_database(process_id, f"Number of files in archive: {num_files}, Total size of files: {total_size / (1024 ** 2):.2f} MB", "INFO", source_url, "Download and Extraction")
   184                                         
   185     40.0 MiB      0.0 MiB           1               if jira_task_key:
   186     40.0 MiB      0.0 MiB           1                   add_comment_to_jira_task(jira_task_key, f"Number of files in archive: {num_files}, Total size of files: {total_size / (1024 ** 2):.2f} MB")
   187                                         
   188     40.0 MiB      0.0 MiB           1               if num_files != 1:
   189                                                         error_message = f"Multiple files found in archive. Found {num_files} files. Process aborted."
   190                                                         logging.error(error_message)
   191                                                         log_to_database(process_id, error_message, "FAILED", source_url, "Download and Extraction")
   192                                                         return None
   193                                         
   194                                                     # Proceed to extract the single file
   195     40.0 MiB      0.0 MiB           1               extracted_file_name = file_info[0].name
   196     40.0 MiB      0.0 MiB           1               logging.info(f"Extracting image from {download_path} to {extracted_dir}")
   197     40.0 MiB      0.0 MiB           1               log_to_database(process_id, f"Extracting image from {download_path} to {extracted_dir}", "INITIATED", source_url, "Download and Extraction")
   198                                         
   199     40.0 MiB      0.0 MiB           1               if jira_task_key:
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
   200     40.0 MiB      0.0 MiB           1                   add_comment_to_jira_task(jira_task_key, f"Extracting image initiated.")
   201                                         
   202     40.2 MiB      0.2 MiB           1               tar.extract(file_info[0], path=extracted_dir)
   203     40.2 MiB      0.0 MiB           1               logging.info(f"Extraction completed to {extracted_dir}")
   204                                         
   205                                                 # Generate URL for the extracted image
   206     40.2 MiB      0.0 MiB           1           extracted_image_url = f"http://10.67.22.100/static/scanIt/extracted_images/{extracted_file_name}"
   207     40.2 MiB      0.0 MiB           1           logging.info(f"Extracted image URL: {extracted_image_url}")
   208     40.2 MiB      0.0 MiB           1           log_to_database(process_id, f"Extracted image URL: {extracted_image_url}", "SUCCEEDED", source_url, "Download and Extraction")
   209                                         
   210     40.2 MiB      0.0 MiB           1           if jira_task_key:
   211     40.2 MiB      0.0 MiB           1               add_comment_to_jira_task(jira_task_key, f"Extraction completed.")
   212                                         
   213     40.2 MiB      0.0 MiB           1           return extracted_image_url
   214                                         
   215                                             except Exception as e:
   216                                                 logging.error(f"Error during extraction: {e}")
   217                                                 log_to_database(process_id, f"Error during extraction: {e}", "FAILED", source_url, "Download and Extraction")
   218                                         
   219                                                 if jira_task_key:
   220                                                     add_comment_to_jira_task(jira_task_key, f"Error during extraction: {e}")
   221                                                 return None


Upload Response Code: 202
Upload Response Content: {"status": {"state": "PENDING", "execution_context": {"task_uuid": "f692a42d-d224-4497-b32d-5199b96148c8"}}, "spec": {"name": "DPRO-AUTOMATION-kvm-CentosUVM-1.0.tar.gz", "resources": {"image_type": "DISK_IMAGE", "source_uri": "http://10.67.22.100/static/scanIt/extracted_images/CentosUVM-1.0/CentosUVM-1.0.img"}, "description": "http://endor.dyn.nutanix.com/agave/goldimages/kvm/CentosUVM-1.0.tar.gz"}, "api_version": "3.1", "metadata": {"owner_reference": {"kind": "user", "uuid": "70e48f7a-1248-577a-9fd8-e2a1f767c889", "name": "itts"}, "use_categories_mapping": false, "kind": "image", "spec_version": 0, "uuid": "8aa9f486-3918-43a7-9910-09b449734f49"}}
Image upload initiated successfully
Task UUID: f692a42d-d224-4497-b32d-5199b96148c8
Comment added successfully!
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: RUNNING, Percentage completed: 0%
State: SUCCEEDED, Percentage completed: 100%
Image upload completed successfully
Image UUID on cluster: 8aa9f486-3918-43a7-9910-09b449734f49
Comment added successfully!
Filename: /home/noc_admin/image_scanner_project/scanIt/scripts/uploadeImageToCluster_v2.py

Line #    Mem usage    Increment  Occurrences   Line Contents
=============================================================
   284     37.5 MiB     37.5 MiB           1   @profile
   285                                         def upload_image_to_nutanix():
   286     37.5 MiB      0.0 MiB           1       process_id = generate_unique_id()
   287     37.5 MiB      0.0 MiB           1       json_data_str = sys.argv[1]
   288     37.5 MiB      0.0 MiB           1       try:
   289     37.5 MiB      0.0 MiB           1           payload = json.loads(json_data_str)
   290     37.5 MiB      0.0 MiB           1           print(f"Processing payload with ID: {process_id}")
   291                                             except json.JSONDecodeError as e:
   292                                                 print(f"Error decoding JSON: {e}")
   293                                                 return
   294                                         
   295                                             # Extract image name and source URL
   296     37.5 MiB      0.0 MiB           1       image_name = payload['spec']['name']
   297     37.5 MiB      0.0 MiB           1       source_url = payload['spec']['resources']['source_uri']
   298                                             
   299                                             # Create Jira case
   300     38.2 MiB      0.8 MiB           1       new_jira_task = create_jira_task("New scan request", "A ticket created based on a request received through the self-selfice portal. New image scan request")
   301     38.2 MiB      0.0 MiB           1       if new_jira_task:
   302     39.8 MiB      1.5 MiB           1           log_to_database(process_id, f"Jira ticket: {new_jira_task}", "SUCCEEDED", source_url, "Jira case")
   303                                             else:
   304                                                 log_to_database(process_id, f"Jira ticket not created. There was a problem. The scanning process will continue without recording in the ticket", "FAILED", source_url, "Jira case")
   305                                             
   306                                             # Define directories
   307     39.8 MiB      0.0 MiB           1       download_dir = '/home/noc_admin/image_scanner_project/downloads/'
   308     39.8 MiB      0.0 MiB           1       extracted_dir = '/home/noc_admin/image_scanner_project/static/scanIt/extracted_images/'
   309                                         
   310     39.8 MiB      0.0 MiB           1       if source_url.endswith('.tar.gz'):   
   311     40.2 MiB      0.5 MiB           1           new_source_url = download_and_extract_image(source_url, download_dir, extracted_dir, process_id, new_jira_task)
   312                                         
   313     40.2 MiB      0.0 MiB           1           if new_source_url:
   314     40.2 MiB      0.0 MiB           1               payload['spec']['resources']['source_uri'] = new_source_url
   315                                                 else:
   316                                                     print("Failed to download and extract image.")
   317                                                     return
   318                                         
   319                                             # URL for image upload
   320     40.2 MiB      0.0 MiB           1       upload_url = f"https://{cluster_ip}:9440/api/nutanix/v3/images"
   321                                             
   322     40.2 MiB      0.0 MiB           1       try:
   323     40.2 MiB      0.0 MiB           2           upload_response = requests.post(
   324     40.2 MiB      0.0 MiB           1               upload_url,
   325     40.2 MiB      0.0 MiB           1               auth=HTTPBasicAuth(username, password),
   326     40.2 MiB      0.0 MiB           1               json=payload,
   327     40.2 MiB      0.0 MiB           1               verify=False
   328                                                 )
   329     40.2 MiB      0.0 MiB           1           print(f"Upload Response Code: {upload_response.status_code}")
   330     40.2 MiB      0.0 MiB           1           print(f"Upload Response Content: {upload_response.text}")
   331                                             except requests.RequestException as e:
   332                                                 print(f"Failed to initiate image upload: {e}")
   333                                                 return
   334                                         
   335     40.2 MiB      0.0 MiB           1       if upload_response.status_code == 202:
   336     40.2 MiB      0.0 MiB           1           print("Image upload initiated successfully")
   337                                                 
   338     40.2 MiB      0.0 MiB           1           task_uuid = upload_response.json().get('status', {}).get('execution_context', {}).get('task_uuid', '')
   339     40.2 MiB      0.0 MiB           1           print(f"Task UUID: {task_uuid}")
   340                                         
   341     40.2 MiB      0.0 MiB           1           task_url = f"https://{cluster_ip}:9440/api/nutanix/v3/tasks/{task_uuid}"
   342                                         
   343     40.5 MiB      0.2 MiB           1           log_to_database(process_id, f"Image upload initiated successfully. Task UUID: {task_uuid}", "INITIATED", source_url, "Cluster Image Upload")
   344                                         
   345     40.5 MiB      0.0 MiB           1           if new_jira_task:
   346     40.5 MiB      0.0 MiB           1               add_comment_to_jira_task(new_jira_task, f"Image upload initiated successfully.")
   347                                         
   348     41.2 MiB      0.0 MiB          12           while True:
   349     41.2 MiB      0.0 MiB          12               try:
   350     41.2 MiB      0.8 MiB          12                   task_response = requests.get(task_url, auth=HTTPBasicAuth(username, password), verify=False)
   351     41.2 MiB      0.0 MiB          12                   task_status = task_response.json()
   352                                         
   353     41.2 MiB      0.0 MiB          12                   state = task_status.get('status', 'UNKNOWN')
   354     41.2 MiB      0.0 MiB          12                   percentage_complete = task_status.get('percentage_complete', 'N/A')
   355     41.2 MiB      0.0 MiB          12                   print(f"State: {state}, Percentage completed: {percentage_complete}%")
   356                                         
   357     41.2 MiB      0.0 MiB          12                   if state == 'SUCCEEDED':
   358     41.2 MiB      0.0 MiB           1                       print("Image upload completed successfully")
   359     41.2 MiB      0.0 MiB           1                       uuid = task_status['entity_reference_list'][0]['uuid']
   360     41.2 MiB      0.0 MiB           1                       print(f"Image UUID on cluster: {uuid}")
   361     41.2 MiB      0.0 MiB           1                       log_to_database(process_id, f"Image <{image_name}> successfully uploaded. Image UUID: {uuid}", "SUCCEEDED", source_url, "Cluster Image Upload")
   362     41.2 MiB      0.0 MiB           1                       if new_jira_task:
   363     41.2 MiB      0.0 MiB           1                           add_comment_to_jira_task(new_jira_task, f"Image successfully uploaded.")
   364                                         
   365                                                             # log_to_database(process_id, f"NEXT STEPS STOPPED. Uncoment subprocess in uploadeImageToCluster_v2.py", "INFO", source_url, "Cluster Image Upload")
   366     41.2 MiB      0.0 MiB           1                       script_path = '/home/noc_admin/image_scanner_project/scanIt/scripts/deployVm_v1.py'
   367     41.2 MiB      0.0 MiB           1                       command = f"python3 {script_path} {process_id} {uuid} {image_name} {source_url} {new_jira_task}"
   368     41.2 MiB      0.0 MiB           1                       subprocess.Popen(command, shell=True)
   369                                         
   370                                                             # Clean up the extracted file only if upload was successful
   371     41.2 MiB      0.0 MiB           1                       cleanup_extracted_file(new_source_url, extracted_dir, process_id)
   372     41.2 MiB      0.0 MiB           1                       break
   373                                         
   374     41.2 MiB      0.0 MiB          11                   elif state == 'FAILED':
   375                                                             print("Image upload failed")
   376                                                             log_to_database(process_id, f"Image upload failed", "FAILED", source_url, "Cluster Image Upload")
   377                                         
   378                                                             if new_jira_task:
   379                                                                 add_comment_to_jira_task(new_jira_task, f"Image upload failed.")
   380                                                             break
   381                                         
   382                                                     except requests.RequestException as e:
   383                                                         print(f"Error retrieving task status: {e}")
   384                                         
   385     41.2 MiB      0.0 MiB          11               time.sleep(15)
   386                                         
   387                                             else:
   388                                                 print("Failed to initiate image upload")
   389                                                 print(f"Response Code: {upload_response.status_code}")
   390                                                 print(f"Response Content: {upload_response.text}")


Process 36324 dead!
Process 36324 detected
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
/home/noc_admin/myenv/lib/python3.12/site-packages/urllib3/connectionpool.py:1099: InsecureRequestWarning: Unverified HTTPS request is being made to host '10.67.4.25'. Adding certificate verification is strongly advised. See: https://urllib3.readthedocs.io/en/latest/advanced-usage.html#tls-warnings
  warnings.warn(
014de00a-d9a2-45fe-a2ef-557920c0a5cc 8aa9f486-3918-43a7-9910-09b449734f49 DPRO-AUTOMATION-kvm-CentosUVM-1.0.tar.gz http://endor.dyn.nutanix.com/agave/goldimages/kvm/CentosUVM-1.0.tar.gz
VM creation initiated successfully
Task UUID: 5b13667a-6347-438a-a6ed-ced5931deec2
Comment added successfully!
Current state: RUNNING
State not found in response
Current state: SUCCEEDED
VM creation completed successfully
{'status': 'SUCCEEDED', 'last_update_time': '2024-09-15T16:44:05Z', 'logical_timestamp': 2, 'entity_reference_list': [{'kind': 'vm', 'uuid': '69e7e5b4-4e84-441b-9e9f-68170a79b26d'}], 'start_time': '2024-09-15T16:44:00Z', 'creation_time': '2024-09-15T16:44:00Z', 'start_time_usecs': 1726418640354235, 'cluster_reference': {'kind': 'cluster', 'uuid': '0005cc04-f8bc-a8bc-154c-ac1f6b3fdbfe'}, 'subtask_reference_list': [], 'completion_time': '2024-09-15T16:44:05Z', 'creation_time_usecs': 1726418640277059, 'progress_message': 'create_vm', 'operation_type': 'create_vm_intentful', 'completion_time_usecs': 1726418645559122, 'percentage_complete': 100, 'api_version': '3.1', 'uuid': '5b13667a-6347-438a-a6ed-ced5931deec2'}
Comment added successfully!
VM IP Address: 10.67.22.171
Comment added successfully!
Comment added successfully!
SSH connection to 10.67.22.171 established successfully with user nutanix
Check Result: SSH
VM avialable via ssh/winRM
Comment added successfully!
SSH connection to 10.67.22.171 established successfully with username: nutanix
Executing command 'uname -s' as user 'nutanix'
Detected OS type: Linux
Checking linux distro
Executing command 'cat /etc/os-release' as user 'nutanix'
Detected distribution: Unknown 
Version: Unknown
Unknown or unsupported distribution. Stopping execution.
SSH connection closed
